@*
    Checkbox input
*@

@typeparam Model

<fieldset class="field-checkbox display-@Display.ToLower()">

    <input type="checkbox" id="@ElemRef.Id" checked="@Value"
           @attributes="AdditionalAttributes"
           @ref="ElemRef" />

    @if (!string.IsNullOrWhiteSpace(Label))
    {
        <label for="@ElemRef.Id">
            <DisplayName Model="Model" Name="@Label" />
        </label>
    }

</fieldset>

@code {

    private ElementReference ElemRef = new ElementReference("fieldcheckbox-" + Guid.NewGuid());

    private bool _value;

    [Parameter]
    public bool Value
    {
        get => _value;
        set { if (Value != value) _value = value; ValueChanged.InvokeAsync(value); }
    }

    [Parameter] public EventCallback<bool> ValueChanged { get; set; }

    [Parameter] public string Label { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }

    /// <summary>
    /// block, inline, inline-block, ...
    /// </summary>
    [Parameter] public string Display { get; set; } = "block";

}
