@*
    Tab Label
*@

<li class="@CssClass @(_isActive ? "active" : "")">
    <a @onclick="SetTabContent">
        @Title
    </a>
</li>

@code {

    private ElementReference ElemRef = new ElementReference("tab-" + Guid.NewGuid());

    [Parameter] public TabGroup TabContext { get; set; }

    [Parameter] public string Title { get; set; }
    [Parameter] public bool Selected { get; set; }
    [Parameter] public string CssClass { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    private bool _isActive => TabContext.TabSelected == ElemRef.Id;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(TabContext.TabSelected) && Selected)
            await SetTabContent();
    }

    protected async Task SetTabContent()
    {
        // _isActive = true;
        await TabContext.SetTab((ChildContent, ElemRef.Id));
        await InvokeAsync(StateHasChanged);
    }
}
